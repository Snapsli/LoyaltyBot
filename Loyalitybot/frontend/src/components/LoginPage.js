import React, { useState } from 'react';

const LoginPage = ({ onTelegramAuth, onClassicAuth, loading }) => {
  const [showClassicForm, setShowClassicForm] = useState(false);
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [classicLoading, setClassicLoading] = useState(false);
  const [error, setError] = useState('');

  const handleClassicSubmit = async (e) => {
    e.preventDefault();
    setError('');
    setClassicLoading(true);

    try {
      await onClassicAuth(email, password);
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    } finally {
      setClassicLoading(false);
    }
  };

  const handleTelegramAuth = async () => {
    try {
      await onTelegramAuth();
    } catch (err) {
      setError(err.message || '–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram');
    }
  };

  if (showClassicForm) {
    return (
      <div className="login-container">
        <div className="login-card">
          <h2>–í—Ö–æ–¥ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</h2>
          
          <form onSubmit={handleClassicSubmit} className="classic-login-form">
            <div className="form-group">
              <label htmlFor="email">Email/–õ–æ–≥–∏–Ω:</label>
              <input
                type="text"
                id="email"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
                placeholder="admin"
              />
            </div>
            
            <div className="form-group">
              <label htmlFor="password">–ü–∞—Ä–æ–ª—å:</label>
              <input
                type="password"
                id="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
              />
            </div>
            
            {error && <div className="error-message">{error}</div>}
            
            <div className="button-group">
              <button 
                type="submit" 
                disabled={classicLoading}
                className="login-btn primary"
              >
                {classicLoading ? '–í—Ö–æ–¥–∏–º...' : '–í–æ–π—Ç–∏'}
              </button>
              
              <button 
                type="button" 
                onClick={() => setShowClassicForm(false)}
                className="login-btn secondary"
              >
                –ù–∞–∑–∞–¥
              </button>
            </div>
          </form>
        </div>
      </div>
    );
  }

  return (
    <div className="login-container">
      <div className="login-card">
        <h2>Loyalty Bot</h2>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –≤—Ö–æ–¥–∞:</p>
        
        <div className="auth-options">
          <button 
            onClick={handleTelegramAuth}
            disabled={loading}
            className="login-btn telegram"
          >
            {loading ? '–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è...' : 'üì± –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram'}
          </button>
          
          <button 
            onClick={() => setShowClassicForm(true)}
            className="login-btn classic"
          >
            üîë –í–æ–π—Ç–∏ —Å –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º
          </button>
        </div>
        
        {error && <div className="error-message">{error}</div>}
        
        <div className="login-info">
          <small>
            –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å<br/>
            –î–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram
          </small>
        </div>
      </div>
    </div>
  );
};

export default LoginPage; 